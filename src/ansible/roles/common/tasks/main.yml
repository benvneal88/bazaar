---
# - name: Create user
#   user:
#     name: "{{ common_user }}"
#     shell: /bin/bash
#     groups: sudo
#     append: true
#     create_home: true
#     # password: "{{ password | password_hash('sha512') }}"
#     # update_password: on_create
#     state: present

# - name: Force reset password on first login
#   command: "chage -d 0 {{ common_user }}"

# - name: Set timezone
#   community.general.timezone:
#     name: "{{ common_timezone }}"

- name: Update apt packages
  apt:
    update_cache: true
    cache_valid_time: 86400
    upgrade: true

# - name: Wait for dpkg lock to be released
#   shell: while lsof /var/lib/dpkg/lock-frontend ; do sleep 10 ; done;
#   changed_when: false

- name: Install packages
  apt:
    name: "{{ item }}"
    state: present
  with_items: "{{ common_packages }}"
  

# - name: Install Bitwarden CLI
#   unarchive:
#     src: "https://vault.bitwarden.com/download/?app=cli&platform={{ ansible_system|lower }}"
#     dest: "/usr/bin"
#     remote_src: true
#     mode: 0755
#     owner: root
#     group: root
#   tags: bw

# - name: Create NFS share directories
#   file:
#     path: "{{ common_nfs_dir }}"
#     mode: 0755
#     owner: "{{ common_user }}"
#     group: "{{ common_user }}"
#     state: directory
#   tags: nfs

- name: Limit journalctl size
  lineinfile:
    path: "/etc/systemd/journald.conf"
    regexp: "^SystemMaxUse="
    line: "SystemMaxUse=100M"

# Install Docker
- name: Add Docker GPG key
  ansible.builtin.shell: |
    curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

- name: Add Docker repository
  ansible.builtin.shell: |
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

- name: Install Docker
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present
    update_cache: yes

- name: Ensure Docker is running
  service:
    name: docker
    state: started
    enabled: yes

- name: Add user to docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes

- name: Delete acme file
  ansible.builtin.file:
    path: "/acme.json"
    state: absent

- name: Create empty ACME key file if it doesn't exist for SSL
  copy:
    content: ""
    dest: "/acme.json"
    force: true
    owner: 1000
    group: 1000
    mode: '0600'
